SET SERVEROUTPUT ON;


--continuare lab 5

--un varray of number care creeaza BD  (in loc de ex 9 din lab5)
CREATE OR REPLACE
TYPE subordonati_ido
AS VARRAY(10) OF NUMBER(4);

CREATE TABLE manageri_ido(cod NUMBER(10), nume VARCHAR2(50), lista subordonati_ido);   -- lista e un array; cv de gen e tabela asta: 1 'ionut' [2,3,4]

DECLARE
    v_sub subordonati_ido := subordonati_ido(100,200,300);
    v_lista manageri_ido.lista%TYPE;
BEGIN 
    INSERT INTO manageri_ido
    VALUES (1, 'MGR 1', v_sub);

    INSERT INTO manageri_ido
    VALUES (3, 'MGR 3', subordonati_ido(400,500));
    
    SELECT lista INTO v_lista 
    FROM manageri_ido
    WHERE cod = 1;
    
    FOR i IN v_lista.FIRST..v_lista.LAST LOOP
        DBMS_OUTPUT.PUT_LINE(v_lista(i));
    END LOOP;
END;
/

DROP TABLE manageri_ido;
DROP TYPE subordonati_ido;


--ex 10

CREATE OR REPLACE 
TYPE tip_telefon_ido AS
TABLE OF VARCHAR(12);
/


CREATE TABLE emp_test_ido AS 
    SELECT employee_id, last_name 
    FROM employees
    WHERE ROWNUM <= 2;
    

ALTER TABLE emp_test_ido   --identic cu SELECT, UPDATE, INSERT
ADD (telefon tip_telefon_ido)
NESTED TABLE telefon 
STORE AS telefon_ido;


SELECT a.employee_id
FROM emp_test_ido a,
TABLE(a.telefon);

SELECT * FROM emp_test_ido;


--ex 11

DECLARE 
    TYPE tip_cod IS VARRAY(5) OF NUMBER(3);
    coduri tip_cod := tip_cod(205, 206);
BEGIN 
    FOR i IN coduri.FIRST..coduri.LAST LOOP
        DELETE FROM emp_ido
        WHERE employee_id = coduri(i);
    END LOOP;
END;
/


DECLARE 
    TYPE tip_cod IS VARRAY(5) OF NUMBER(3);
    coduri tip_cod := tip_cod(205, 206);
BEGIN 
    FORALL i IN coduri.FIRST..coduri.LAST
        DELETE FROM emp_ido
        WHERE employee_id = coduri(i);
END;
/













--LAB6


--Cursoare
    --a) implicite gen SELECT INTO
    --b) explicite:

DECLARE 
    CURSOR c IS (SELECT * FROM employees);
    v_ang employees %ROWTYPE;
BEGIN 
    OPEN c;
    --pt a accesa, folosim FETCH
    --FETCH c INTO v_ang;  --primul fetch, primul rand, daca am mai rula, al doile-a fetch al doile-a rand samd pana cand ajunge la END OF CURSOR
    
    LOOP FETCH c INTO v_ang;
    EXIT WHEN c%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(v_ang.last_name);
    END LOOP;
    
    CLOSE c;  --se elibereaza resursele pentru cand nu mai avem nevoie de cursor 
END;


--cu BULK COLLECT INTO


DECLARE 
    TYPE t_ang IS TABLE OF employees%ROWTYPE;
    v_list_ang t_ang := t_ang();
    CURSOR c IS (SELECT * FROM employees);
BEGIN 
    OPEN c;
    FETCH c BULK COLLECT INTO v_list_ang; 
    
    FOR i IN v_list_ang.FIRST..v_list_ang.LAST LOOP
        DBMS_OUTPUT.PUT_LINE(v_list_ang(i).last_name);
    END LOOP;

END;


--cea mai des folosita varianta!

DECLARE 
    CURSOR c IS (SELECT * FROM employees);
BEGIN 
    FOR i IN C LOOP -- nu mai e nevoie nici de open nici de close
        DBMS_OUTPUT.PUT_LINE(i.LAST_NAME);
    END LOOP;
END;


--si mai usor (dar dubios not good practice), ok pt SELECT-uri mici

BEGIN 
    FOR i IN (SELECT * FROM employees) LOOP -- nu mai e nevoie nici de open nici de close
        DBMS_OUTPUT.PUT_LINE(i.LAST_NAME);
    END LOOP;
END;


--ex 5 


DECLARE 
    v_cod employees.employee_id%TYPE;
    v_nume employees.last_name%TYPE;
    v_nr NUMBER(5);
    CURSOR c IS SELECT sef.employee_id cod, MAX(sef.last_name) nume,
                 count(*) nr
                 FROM employees sef, employees ang
                 WHERE ang.manager_id = sef.employee_id
                 GROUP BY sef.employee_id
                 ORDER BY nr DESC;
BEGIN
    OPEN c;
     LOOP
     FETCH c INTO v_cod,v_nume,v_nr;
     EXIT WHEN c%ROWCOUNT>3 OR c%NOTFOUND;
     DBMS_OUTPUT.PUT_LINE('Managerul '|| v_cod || ' avand numele ' || v_nume ||' conduce ' || v_nr||' angajati');
     END LOOP;
     CLOSE c;
END;


--ex 6, ca la 5 doara ca EXIT in FOR

DECLARE
     CURSOR c IS
     SELECT sef.employee_id cod, MAX(sef.last_name) nume,
     count(*) nr
     FROM employees sef, employees ang
     WHERE ang.manager_id = sef.employee_id
     GROUP BY sef.employee_id
     ORDER BY nr DESC;
BEGIN
     FOR i IN c LOOP
     EXIT WHEN c%ROWCOUNT>3 OR c%NOTFOUND;
     DBMS_OUTPUT.PUT_LINE('Managerul '|| i.cod ||' avand numele ' || i.nume ||' conduce '|| i.nr||' angajati');
     END LOOP;
END;
        